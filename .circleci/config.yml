version: 2.1

with_python: &with_python
  docker:
    - image: cimg/python:3.9

install_poetry: &install_poetry
  run:
    name: Install Poetry
    command: |
      pip install poetry==1.2.2
      poetry --version

install_python_deps: &install_python_deps
  run:
    name: Install python dependencies
    command: poetry install --no-ansi --no-interaction

show_versions: &show_versions
  run:
    name: Show versions
    command: poetry show

install_git_lfs: &install_git_lfs
  run:
    name: Install Git LFS
    command: |
      sudo apt-get update
      sudo apt-get install -qq -y git-lfs

pull_git_lfs_assets: &pull_git_lfs_assets
  run:
    name: Pull assets from Git LFS
    command: |
      mkdir -p ~/.ssh
      ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      ssh git@github.com git-lfs-authenticate "${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}" download
      git lfs pull

jobs:
  test:
    <<: *with_python

    steps:
      - checkout

      - *install_poetry
      - run:
          name: Install python dependencies
          command: poetry install --no-ansi --no-interaction --extras landmarker --extras cli --extras meshlab
      - *show_versions

      - *install_git_lfs
      - *pull_git_lfs_assets

      - run:
          name: Run tests
          when: always
          command: ./dev.py coverage

      - run:
        name: run tests on latest numpy
        command: |
          pip install numpy==1.23.4
          ./dev.py coverage

  lint:
    <<: *with_python

    steps:
      - checkout

      - *install_poetry
      - *install_python_deps
      - *show_versions

      - *install_git_lfs
      - *pull_git_lfs_assets

      - run:
          name: Check lint
          when: always
          command: ./dev.py lint

      - run:
          name: Run the doc build
          when: always
          command: ./dev.py doc

  format:
    <<: *with_python

    steps:
      - checkout

      - *install_poetry
      - *install_python_deps
      - *show_versions

      - *install_git_lfs
      - *pull_git_lfs_assets

      - run:
          name: Check code format
          when: always
          command: ./dev.py black-check

workflows:
  version: 2

  on-commit:
    jobs:
      - test
      - lint
      - format

  daily:
    triggers:
      - schedule:
          cron: "0 17 * * *"
          filters:
            branches:
              only: main
    jobs:
      - test
      - lint
      - format
